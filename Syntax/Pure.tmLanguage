<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>pure</string>
	</array>
	<key>foldingStartMarker</key>
	<string>\b(when|with|of)\b</string>
	<key>foldingStopMarker</key>
	<string>\bend\b</string>
	<key>keyEquivalent</key>
	<string>^~P</string>
	<key>name</key>
	<string>Pure</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>\(\)</string>
			<key>name</key>
			<string>meta.empty-tuple.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\[\]</string>
			<key>name</key>
			<string>meta.empty-list.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\{\}</string>
			<key>name</key>
			<string>meta.empty-matrix.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(pre|in|post|non|out)fix[lr]?\b</string>
			<key>name</key>
			<string>keyword.operator.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(const|let|def|when|with|end|extern|type)\b</string>
			<key>name</key>
			<string>keyword.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(namespace|interface)\s+\S+\s+(with)</string>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.pure</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.pure</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.declaration.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(true|false)\b</string>
			<key>name</key>
			<string>support.constant.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(catch|throw|__break__|__trace__)\b</string>
			<key>name</key>
			<string>support.function.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(if|then|else|otherwise|case|of)\b</string>
			<key>name</key>
			<string>keyword.control.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(int8|int16|int32|int64|char|bool|float|int|bigint|double|expr|short|long|void|string|pointer|matrix|dmatrix|cmatrix|imatrix|smatrix|nmatrix)\b</string>
			<key>name</key>
			<string>storage.type.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(private|public)\b</string>
			<key>name</key>
			<string>keyword.operator.pure</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(using)\s+(namespace\s+)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>keyword.pure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;\s*\n</string>
			<key>name</key>
			<string>meta.declaration.pure</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>\b(interface|namespace)\s+</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.pure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>;\s*\n</string>
			<key>name</key>
			<string>meta.declaration.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b(interface|namespace)\b</string>
			<key>name</key>
			<string>keyword.operator.pure</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>Floats are always decimal</string>
			<key>match</key>
			<string>((\b[0-9]+)?\.[0-9]+([eE][+-]?[0-9]+)?|[0-9]+(\.[0-9]+)?[eE][+-]?[0-9]+)\b</string>
			<key>name</key>
			<string>constant.numeric.float.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>\b([0-9]+|0([xX][0-9a-fA-F]+|[bB][01]+))\b</string>
			<key>name</key>
			<string>constant.numeric.pure</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>"</string>
			<key>beginCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.pure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>"</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.pure</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.double.pure</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\\(\([^)\s]*\))</string>
					<key>name</key>
					<string>constant.character.escape.pure</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\\\w+</string>
					<key>name</key>
					<string>constant.character.escape.pure</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.pure</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.pure</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.pure</string>
				</dict>
			</dict>
			<key>match</key>
			<string>(//).*$\n?</string>
			<key>name</key>
			<string>comment.line.double-slash.pure</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.pure</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.term.pure</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.operator.pure</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(\S[\w\(\)\[\],.@:!]+)([\w\(\)\[\],.@:! \t]+)?\s+(=)</string>
			<key>name</key>
			<string>meta.term.lhs.pure</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#infix_op</string>
		</dict>
		<dict>
			<key>comment</key>
			<string>My grasp of pure is not very strong, but I think it supports the same operators as Haskell and then some</string>
			<key>match</key>
			<string>([|&amp;!%$?~+:\-,^#.=&lt;/&gt;\\\*]+)|\b(and|or|not|div|mod)\b</string>
			<key>name</key>
			<string>keyword.operator.pure</string>
		</dict>
		<dict>
			<key>match</key>
			<string>'</string>
			<key>name</key>
			<string>keyword.operator.quote.pure</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>infix_op</key>
		<dict>
			<key>match</key>
			<string>(\([|!%$+:\-.=&lt;/&gt;]+\)|\(,+\))</string>
			<key>name</key>
			<string>entity.name.function.infix.pure</string>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.pure</string>
	<key>uuid</key>
	<string>DF25F299-2C32-4981-82E4-58D4AC94B398</string>
</dict>
</plist>
